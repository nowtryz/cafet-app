<?php
namespace cafetapi\data;

/**
 * The Reloas object is the one that stores reload information for
 * later use, it's generaly generated by the Client's method
 * getReloads or even directly whith the Data
 * static method getClientReloads().
 *
 * @see Client::getReloads()
 * @see \cafetapi\io\DataFetcher::getClientReloads()
 * @author Damien
 * @since API 0.1.0 (2018)
 */
class Reload extends JSONParsable implements Data
{

    private $id;
    private $client_id;
    private $details;
    private $date;
    private $amount;
    private $balanceAfterTransaction;

    /**
     * The Reloas object is the one that stores reload information for
     * later use, it's generaly generated by the Client's method
     * getReloads or even directly whith the Data
     * static method getClientReloads().
     *
     * @param int $id
     * @param int $client_id
     * @param string $details
     * @param Calendar $date
     * @param float $amount
     * @param float $balanceAfterTransaction
     * @see Client::getReloads()
     * @see \cafetapi\io\ReloadManager::getClientReloads()
     * @since API 0.1.0 (2018)
     */
    public function __construct(int $id, int $client_id, string $details, Calendar $date, float $amount, float $balanceAfterTransaction)
    {
        $this->id = $id;
        $this->client_id = $client_id;
        $this->details = $details;
        $this->date = $date;
        $this->amount = $amount;
        $this->balanceAfterTransaction = $balanceAfterTransaction;
    }

    /**
     * Returns the $id
     *
     * @return int the $id
     * @since API 0.1.0 (2018)
     */
    public final function getId(): int
    {
        return $this->id;
    }

    /**
     * Returns the $client
     *
     * @return Client the $client
     * @since API 0.1.0 (2018)
     */
    public final function getClient(): int
    {
        return $this->client_id;
    }

    /**
     * Returns the $details
     *
     * @return string the $details
     * @since API 0.1.0 (2018)
     */
    public final function getDetails(): string
    {
        return $this->details;
    }

    /**
     * Returns the $date
     *
     * @return Calendar the $date
     * @since API 0.1.0 (2018)
     */
    public final function getDate(): Calendar
    {
        return $this->date;
    }

    /**
     * Returns the $amount
     *
     * @return float the $amount
     * @since API 0.1.0 (2018)
     */
    public final function getAmount(): float
    {
        return $this->amount;
    }

    /**
     * Returns the $balanceAfterTransaction
     *
     * @return float the $balanceAfterTransaction
     * @since API 0.1.0 (2018)
     */
    public final function getBalanceAfterTransaction(): float
    {
        return $this->balanceAfterTransaction;
    }

    public function __toString(): string
    {
        return $this->parse_JSON(get_object_vars($this));
    }
    
    public function getProperties(): array
    {
        $vars = get_object_vars($this);
        $vars['date'] = $vars['date']->getProperties();
        
        return array_merge(['type' => get_simple_classname($this)], $vars);
    }
}

